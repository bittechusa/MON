1. Can you tell me about yourself?

	Answer: My name is shahidul islam.In my QA career, I have been working on various system platforms and operating systems like  Windows 8,mac and UNIX. I have tested applications developed in mainly Java and i have some idea about ruby and python. I have tested Web-based applications using selenium webdriver.As a QA person, I have written Test Plans, Test Cases, attended walkthrough meetings with the Business Analysts, Project Managers, Business Managers and QA Leads. Attended requirement review meetings and provided feedback to the Business Analysts.I have used maven to build the project and i have used jira as a project management tools and i have used test link as test management tool.I have used git for version controller in our project.Git also used for communicate among all qa member so if any qa add anything or update that qa leader can get easily and quickly.As a agile metholodgy fast communication is very important. I have worked in different databases like mysql,oracle mssql and wrote SQL queries to retrieve data from the database.As far as different types of testing is concerned, I have performed Smoke Testing, Functional Testing, Backend Testing, BlackBox Testing, Integration Testing, Regression Testing and UAT (User Acceptance Testing) Testing.I have written defects as they are found using ClearQuest and TestDirector. Once the defects were fixed, retested them and if the passed, closed them. If the defects were not fixed, then reopened them. I have also attended the defect assessment meetings as necessary.In the meantime, a continuous interaction with developers was necessary.This is pretty much what I have been doing as a QA person.

2. What did you do in your last project?

	In my last project, the application was a web-based application developed in Java platform. As a QA Person, I wrote Test Plans from the requirement documents and Use Cases. I performed Smoke Testing, Functional Testing, Backend Testing, BlackBox Testing, Integration Testing, Regression Testing and UAT (User Acceptance Testing). I have participated in Load Testing and Stress Testing. I attended several daily standup meetings for requirement reviews and provided feedback to the Business Analysts.Mainly i discussed in daily standup meeting what i did yesterday ,what i am going to do today and what is any obstracle. Mostly, I was in the backend testing, which required writing SQL queries directly to the database.Besides these, I wrote defects using ClearQuest. Once the defects were fixed, retested them and if the passed, closed them. If the defects were not fixed, then reopened them.

3.What is a Test Plan?

	A test plan is a document detailing a systematic approach to testing a system such as a machine or software. The plan typically contains a detailed understanding of the eventual workflow.
	OR A Software Test Plan is a document describing the testing scope and activities. It is the basis for formally testing any software/product in a project.

What does it include?
	 A Test Plan includes Heading, Revision History, Table of Contents, Introduction, Scope, Approach, Overview, different types of testing that will be carried out, what software and hardware will be required, issues, risks, assumptions and sign off section.

4. What is a Test Case? What does it include?

	A Test Case is a document that describes step by step process how to test the application. A Test Case includes Test Case ID, Steps Description, Expected Output, Actual Output, Pass/Fail, Remarks.

5.  How many Test Cases did you write in your last project?

	Answer:  I wrote about 1100 Test Cases in my last project. (The reasonable number of Test Cases varies from 500 to thousands. The number 1100 test cases can be completed in a 6 month project duration).

6.  What document did you refer to write the Test Cases?

	Requirement document. (NOTE: It can also be Use Cases, or Design Document)(Note: It depends company to company. In some companies, they use Use Cases. In some companies, they use Requirement Documents and in some companies, they use Design Document. However, in practical scenario, most of the companies have requirement document at least). 

7.  Did you have a situation where you did not have any documents (no requirement document, no Use Cases, or no Design Document) and you had to write the Test Cases? How did you write the Test Cases?

	Yes. I have been to that kind of scenarios several times. There were companies where they had no documents at all. In that case, I had to discuss the application scenario and functionalities with the Business Analysts or developer. I kind of prepared a document in consultation with Business Analysts and Developers and then started writing Test Cases.

8.  Have you worked with the Uses Cases before?

	Yes. I have written Test Cases using Use Cases.

Can you tell me what a Use Case is?

	A use case is a document that describes the user action and system response for a particular functionality. (you can also include, For example, in the Use Case given below, is a Use Case for login system for a company called Auto Parts One. This application is being developed by Digital Systems, Inc. The project name is Auto Parts One. However, the business owner (user) is a company called American Auto Parts of the North (imaginary name). Or

What is a Use Case and what does it include?

	A Use Case is a document that describes the user action and system response for a particular functionality. It includes cover page, Revision History, Table of Contents, Floe of Events (normal flow and alternative flow), Exceptions, Special Requirements, Pre-conditions and Post-conditions.

9.  What is Software Development Life Cycle?

	The systems (or software) development life cycle (SDLC) is a conceptual model used in project management that describes the stages involved in an information system development project, from an initial feasibility study through maintenance of the completed application.It includes the following different stages:

	1.  Requirement phase 
	2.  Design phase 
	3.  Coding (programming)
	4.  Testing
	5.  Release (Production)
	6.  Maintenance (Support)

10.  What is Business Requirement Document (BRD)?

	It is a document that describes the details of the application functionalities which is required by the user. This document is written by the Business Analysts.

What is Software Testing Life Cycle (STLC)?

	The testing of software has its own life cycle.  It starts with study and analyzing the requirements.  Here is the software testing life cycle:

	1.  Requirement Study
	2.  Test Planning
	3.  Writing Test Cases
	4.  Review the Test Cases
	5.  Executing the Test Cases
	6.  Bug logging and tracking
	7.  Close or Reopen bugs

What is Business Design Document?

	It is the document which describes the application functionalities of the user in detail. This document is the further details of the Business Requirement Document. This is a very crucial step in the SDLC. Sometimes the Business Requirement Document and Business Design Document can be lumped together to make only one Business Requirement Document.

What is Code Generation or Program?

	Coding is the process of translating the Business Design Document into the machine readable form. If the design is done in detailed manner, the Code Generation can be done without much application. Programming tools like Compilers, Interpreters and Debuggers are used to generate the code thru different high level language like ruby, C++, Java.

11.  What is a Module?

	A ‘Module’ is a software component that has a specific task. It can be a ‘link’ which can go inside to its component detail.

12.  What is meant by Walk-thru meeting?

	Before start working in a module and/or after accomplishing the testing of a module, the tester calls a meeting to disseminate his findings or to share his queries to other tester or leads of the company working on the same application that is called the Walk-thru meeting.

13.  What are different types of software testing?

	Different types of testing carried out are:

	1) Unit testing
	2) Shakeout testing
	3) Smoke testing (Ad-hoc testing)
	4) Functional testing
	5) Integration testing
	6) Regression testing
	7) System testing
	8) Load testing
	9) Stress testing
	10) Performance testing
	11) User acceptance testing
	12) Black box testing
	13) White box testing
	14) Alpha testing
	15) Beta testing

	1) Unit testing: It is a test to check the code whether it is properly working or not as per the requirement.  It is done by the developers (Not testers).

	2) Shakeout testing: This test is basically carried out to check the networking facility, database connectivity and the integration of modules. (It is done by the Configuration Team)

	3) Smoke testing: It is an initial set of test to check whether the major functionalities are working or not and also to check the major breakdowns in the application. It is the preliminary test carried out by the SQA tester.

	4) Functional testing: al It is a test to check whether each and every functionality of that application is working as per the requirement. It is major test where 80% of the tests are done. In this test, the Test Cases are ‘executed’.

	5) Integration testing: It is a test to check whether all the modules are combined together or not and working successfully as specified in the requirement document. 

	6) Regression testing: When a functionality is added to an application, we need to make sure that the newly added functionality does not break the application.  In order to make it sure, we perform a repeated testing which is called Regression Testing.  We also do regression testing after the developers fix the bugs.

	7) System testing: Testing which is based on overall requirements specification and it covers all combined parts of a system. It is also a black box type of testing.

	8) Load testing: It is a test to check the user’s response time of number of users using any one scenario (single business process) of the same application at the same time.

	9) Stress testing: In this type of testing the application is tested against heavy load such as complex numerical values, large number of inputs, large number of queries etc. which checks for the stress/load the applications can withstand.

	10) Performance testing: It is a test to check the user’s response time of number of users using multiple scenarios (multiple business process) of the same application at the same time.

	11) User acceptance testing: In this type of testing, the software is handed over to the user in order to find out if the software meets the user expectations and works as it is expected to.

	12) Black box testing: It is test where a tester performs testing without looking into the code. OR A testing method where the application under test is viewed as a black box and the internal behavior of the program is completely ignored. Testing occurs based upon the external specifications. Also known as behavioral testing, since only the external behavior of the program is evaluated and analyzed.

14.  What was the process of QA testing in your company where you worked for the last time? (or As far as the QA process is involved, what was the testing process in your company?)

	The QA testing process that was followed in my last company where I worked was like this: First of all the Business Requirement Document was prepared as per the client’s requirement (with the muck-up screen shots). Then on the basis of the requirement document, Test Strategy, Test Plans and Test Cases were written in sequential order. Once the Build is made and deployed to the different testing environments where different types of testing were performed to check whether there are any defects.

15.  What is Backend Testing?

	It is a test to check whether the data displayed in the GUI front end report format matches with the particular data in the original database.
16.  Have you done any Back End Testing and/or if you did, how did you do it in your last project?

	Yes I did. I was working on Reports. When I was working in my last project, this was my scenario:It was the case of testing one part of application used in the bank, where a customer comes to a bank’s front desk associate and ask for opening an account. The associate then asks for the personal information about the customer which, are the primary data, such as: First Name, Last Name, Date of Birth, Address and Social Security Number. The associate then put these primary data of that particular customer into the computer, which then afterwards batch-processed into the DATABASE in XML Format. Then the batch-processed data is sent to ETL (Extract-Transform-Load, which is software made by ‘AbInitio’ or ‘Informatica’) which processes the job to create a file to produce the report. The file is displayed to a GUI Front End report format with the help of Crystal Report/Business Object. In the GUI Front End report, let us say, if for January, the income of that person was displayed as $ 900.00, then my job was to validate this data by writing SQL queries whether this displayed data matches with the original input data in the database, being called as the Back End Testing.
17.How can you be sure that the query you wrote is correct? Or how do you know that the data you pulled from the database is correct?

	Answer: I write SQL query based on the requirement document. In the requirement document, various conditions are given for the query. Based on those conditions, I write SQL query. Therefore, anything different from the requirement document is definitely a defect.

18.  What do you do on your  first day of the work?

	Answer: On the first day, normally, we will be given a computer and support people will set up the User Name and Password for the computer.  If that is done already, then the QA Lead or QA Manager will give me a brief walk through of the documents (which documents are where), introduce to different team members (normally to the ones you will be working with).  Then your boss will ask you to step into work what needs to be done.  However, the first thing normally is, they will ask you to read the documents available for that project.

19.What do you do if you have any questions to ask? Who do you ask?

	At the beginning, we all panic, what kind of questions to ask? What if they ask questions that I don’t know? Is it OK to ask questions? What do I do if I don’t know how to do the job I am assigned to? and so on.As mentioned earlier, on the first day, your Manager will give you the system (computer) (They normally call system, not computer), will tell you what the User ID and Password is, where are the QA documents on the shared drive (or Network drive) are and so on. They will definitely ask you to read a lot of documents at the beginning (And you must read read and read those documents AS MUCH AS POSSIBLE. At the beginning, allocate about 2 hours extra at home for reading these documents. This habit will put you on the top of your job). These documents are normally design specification document (DSD). Different companies call it with different names, for example, Requirement Specification Document (RSD) and so on. After reading the documents, you will be asked to write Test Plans or Test Cases (Don’t panic. The Test Plans and Test Cases templates will be give by your manager or test lead and they will tell you what to do and how to do because different companies have different formats they follow. If they don’t have one, then you can always prepare a sample from this website (see on the right column) and give it to them. You will be hero)

20. Are you better working in a team or working alone?

	Answer: I am a team player. I get along with team members very well. As far as the working is concerned, I can be equally productive in team or working alone.(Caution: Never say, I like working alone. This could lead you to not getting a job as they are always looking for people who can get along with other people.)

21. Do you have any situations in the past where you have some arguments with your team members?

	Answer: No. I never had that type of situation wherever I have worked.
	Answer: First of all we have the test cases (or test scripts) that are written based on the requirement document. This pretty much covers what functionalities to test. Therefore, looking at the test cases tells us what to test in the application.
	
22. If you have no documentation about the product, how do you test an application? Describe the process.

	Answer: Well, this is a situation where I have come across several times. Some of the companies in my previous projects did not have any documents. In this case, I went to the Business Analyst and some times to developers to find out how exactly the functionalities work, how to navigate from one page to another page and so on. After getting a clear vision, I write test cases based on the conversation (which is a step by step procedure to test an application) and get ready for testing.

23. What is the biggest bug you have ever found?

	Answer: Well, there are many big defects I have found in various projects. For example, in the last project, on a page, there was a button called “More Information”. Once the user clicked that button, the system would open a new window (pop up).

	We could close the new window in 3 ways:
	-By clicking X at the top right corner of the page
	-By clicking “Close” button on the page
	-By pressing combination keys (Alt+F4) on the key board
	Although the combination key (Alt+F4) was not mentioned in the test case, I just wanted to try how the application reacts when Alt+F4 is pressed. Then I pressed Alt+F4. The result was a disaster-the application crashed (broke). The application disappeared from the computer monitor. Since it was the last day of testing for us, it brought chaos in our Managers, Leads and the whole teams. Finally, the developers disabled Alt+F4 as a temporary solution and the application went into production.

24. When should testing start in a project? Why?

	Answer: We should start testing as soon as the following things are ready:
	-Test Data are ready
	-Build (all the developers have coded their code and merged them
	together)
	-Test Environment (servers, network etc) is set up and ready
	-When the manager asks us to go ahead and start testing.

25. Let us say you have a web application to test. How do you go about testing it? What is the process?

	Answer: First of all, I will look at the requirement documents (or design document in some companies). The requirement document will tell us what the functionalities in the application (software) are. Once I analyze the requirement documents (one module=one requirement document). After that, I will write test plans for each module (one module =one test plan). Then after the test plan is complete, I will write test cases (One module can have hundreds, even thousands test cases). Once the test cases are ready and the application is ready (or once the build is ready), then I will start testing. Before I start testing, however, I will make sure the test environments, test data and defect logging tools are in place. This is how I will go about testing an application.

26. What problems did you face in the past? How did you solve it?
	(You will be OK if you just give one of the problems below, not all of them)

	Answer: I had many problems while testing applications in the past.
	As far as I remember one of them (then describe one of them from below), this was the scenario:
	(i) It was a web-based application. I was working on a module called “Transaction Summary”. There was “Submit” button on that page. After entering data in the all the fields, for example, First Name, Last Name, Social Security Number, Date of Birth and so on, I clicked the Submit button. Once I clicked Submit button, an error page displayed, “Page cannot be found…”. Since it was a critical defect, I immediately informed the Test Lead. There was a chaos in the room. All the developers, Database Administrators and Testers gathered in my cube (room). No body could tell exactly what was wrong with it. Finally, one smart guy checked into the database and found out that one of the files in the database was closed. The status of all the files should be in the open status. Once the status of the closed file was put in the “open” status, the application worked fine.(ii) One of the problems was in the Login window (page). When the user enters and Login Name and Password, then Password should be encrypted. One of the Test Cases was that I needed to open database and see whether the password is encrypted or not. I found out it was not encrypted. I reported it as a bug (defect) and it was fixed in the next release (build).(iii) Defects I have found in a project was a defect to close a window (pop up).
	For example, in the last project, on a page, there was a button called “More Information”. Once the user clicked that button, the system would open a new window (pop up).We could close the new window in 3 ways:
	-By clicking X at the top right corner of the page
	-By clicking “Close” button on the page
	-By pressing combination keys (Alt+F4) on the key board
	Although the combination key (Alt+F4) was not mentioned in the test case, I just wanted to try how the application reacts when Alt+F4 is pressed. Then I pressed Alt+F4. The result was a disaster-the application crashed (broke). The application disappeared from the computer monitor. Since it was the last day of testing for us, it brought chaos in our Managers, Leads and the whole teams. Finally, the developers disabled Alt+F4 as a temporary solution and the application went into production.(iv) Another problem was that a user would search for branch location information of a bank. The user logs in by using User Name and Password. After the log in, on the “Search Location” page, the user enters and zip code of the location he wants to find, then clicks Find button. After that the system (application) gives a number of branch locations. The user now clicks “Request Information” for one of the branches. As soon as the user clicks “Request Information” button, the application breaks (displays “Page cannot be found” error). I logged this defect as a critical defect. When the developers and database administrator looked into it, then they found out that in one of the tables, the data was not recorded. In all the tables (UserProfile table, ClientID table and SessionID table), the data should be populated with the information entered by the user. For some reason, in one of the tables, it was blank (null). Once they wrote a small code to populate data (enter data) to the table, the application started working.
	(v) In my previous project, when the customer wants to upload a document, for example, a copy of a monthly statement (in Word format), on the website, the system should automatically change the Word document into .pdf format. Once the document was uploaded, I saw that the fields in the .pdf document were interchanged (misplaced). For example, the First Name displayed in the Last Name section. Date of Birth displayed in the Social Security Number field and so on. We found out that the problem was a mapping problem (remember this word). Once the mapping was correct, I tested in the new build. It was fixed.(vi)  The most common problem that I have faced in my previous projects are the Java script errors, data connectivity, error, HTTP 500 error (This error occurs when server is down), HTTP 400 error (when file is not found) and so on.(vii)  “Father” pop up displayed when Print/Print Preview button clicked. (This was coded by the developer to mark this coding portion  (for his/her own purpose as a mark to indicate where he/she made changes, however, forgot to remove it).  Once the developer fixed it, it still displayed the same thing (because it was in the servers memory and could not go).  Now, I had to reset memory of the server from my machine.  Therefore, what I did is, I went to the website I was testing (for example, http://mysite.app.org/My_profile) and added reset.aspx at the end of the URL (Now the URL becomes http://mysite.app.org/My_profile/reset.aspx and hit enter. It took me to the server memory and I selected section and submitted the query and it was cleared.  Retested again and it is now OK.(viii)  I was testing a web application.  On one page, I clicked Save & Continue button twice (my mistake).  Once this button is clicked twice, the system displayed an error message, “Could not save the answers, please contact technical support”. (When clicked only once, the button works fine.).Solution:  Once the user clicks the button once, the button was disabled later so that the user cannot click twice.(ix)  I was testing a web-based application.  Once all the fields are entered on the one of the pages, we had Print Preview button.  If the user clicks this button, we were supposed see the same information in a new window in PDF format. While looking at the data in PDF file, there were some fields missing, for example, Date of Birth was missing in the PDF file.
27. What are all the basic elements in a defect report?

	Answer: The basic elements in a defect report are: Defect ID, Header, Description, Defect Reported by, Date, Status, Version, Assigned to, Approved by, Module where the defect was found and so on.

28. What is the difference between verification and validation?

	Verification: Verification is a process to ensure that the software that is made, matches the original design. In other words, it checks whether the software is made according to the criteria and specification described in the requirement document. It is to check whether you built the product right as per design. It is a low level checking. (It is done in walk-through meetings generally). It checked whether it is made accordingly to the design..

	Validation: Validation is a process to check whether the product design fits the client’s need. It checks whether you built the right thing. It checks whether it is designed properly.

29. How to derive test scenarios and use cases? What are the contents and format?

	Answer: Test scenarios are derived from requirement documents. We follow each and every functionality (called business rules) mentioned in the requirement document. One functionality can have multiple business rules. For example, let us say in there is one requirement called “Login”. This “Login” may have various scenarios. For example, one scenario is, enter the right User ID and wrong password. The system should display an error message. Another scenario would be to enter wrong User ID and right Password. The system should display an error message. The third scenario could be to enter the right User Name and right Password. The system should allow the user to get into the system. This is how the test cases are derived from the requirement documents or from the Use Cases.
	(For contents for formats of test scenario, please refer to question 4 in qaquestions.com)

30. What are the types of test cases that you write?

	Answer: We write test cases for smoke testing, integration testing, functional testing, regression testing, load testing, stress testing, system testing and so on.

31. How to write Integration test cases?

	Answer: I have never written separate Test Cases Integration Testing. Since Integration Testing is a test to check whether the all the modules are integrated together or not (meaning that when the developers compile all their module and make a build, all modules should be working when they are combined together and those modules when combined, should work as expected). If they are not integrated (combined) in a nice way, then the application breaks. Basically, when we do the functional testing, the integration testing is automatically done. This is my experience.

32. How to write Regression test cases? What are the criteria?

	Answer: Regression test cases are also based on the requirement documents. They are written more into detail and with every release (build), the testers need to do regression testing. The criteria for regression testing are; there should be no major defects while we do our smoke test and functional testing.

33. Is there a format for a test case? Do you follow any methodology for numbering test cases?

	Answer: Yes. It depends upon the company how the company has followed the numbering of test cases. However, normally, it is just a simple numbering in most of the time (see question 4 of qaquestions.com). But some companies may also relate this numbering to the requirement number. For example, if the requirement for Login is “REQ-LOG-001”, then we can number the test cases like REQ-LOG-001-001 and so on.
34. How to write User Acceptance Test plan & test cases?

	Answer: The way of writing Test Plan and Test Cases is the same in all the test phases. However, specifically for User Acceptance Testing, the testers use data nearly real data (meaning that the data is very much similar to the production data or real data). For the format, please refer to question 3 and 4 in qaquestions.com.

35. What are the different matrices that you follow?

	Answer: There are various reports we normally prepare in QA:
	· Test summary Report – It is a report that has list of the total test cases, list of executed test cases, remaining test case to be executed, executed date, pass/fail
	· Defect Report – In this report we normally prepare a list of defect in spreadsheet e.g. defect # CQ12345 [ if you log a defect in the application called Rational ClearQuest]
	· Traceability Matrix [also called RTM (Requirement Traceability Matrix)] Report – the document which shows the relationship between the functionalities or the business rules and the test cases. So, with the help of Traceability Matrix we make sure that we includes all the functionalities in our test cases according to the requirement document.

36. What are the different tests that can be done for Client Server Application and Web-based Application. Give details.

	Answer: For both client server and web based applications, the testing is the same except one thing: We test web based applications in different browsers, for example, Internet Explorer (will test in different versions like IE 5.0, IE 6.0, IE 7.0), Firefox, Safari (for Mac) and so on where as for client server, we don’t need to test in the browsers.

37. Give me five common problems that occur during software development.

	Answer: Poorly written requirements, unrealistic schedules, inadequate testing, adding new features after development is underway and poor communication. Requirements are poorly written when requirements are unclear, incomplete, too general, or not testable; therefore there will be problems. The schedule is unrealistic if too much work is crammed in too little time.
	Software testing is inadequate if none knows whether or not the software is any good until customers complain or the system crashes. It’s extremely common that new features are added after development is underway.Miscommunication either means the developers don’t know what is needed, or customers have unrealistic expectations and therefore problems are guaranteed

38. What is system testing?

	Answer: System testing is black box testing, performed by the Test Team, and at the start of the system testing the complete system is configured in a controlled environment. The purpose of system testing is to validate an application’s accuracy and completeness in performing the functions as designed. System testing simulates real life scenarios that occur in a “simulated real life” test environment and test all functions of the system that are required in real life. System testing is deemed complete when actual results and expected results are either in line or differences are explainable or acceptable, based on client input.
	Upon completion of integration testing, system testing is started. Before system testing, all unit and integration test results are reviewed by Software QA to ensure all problems have been resolved. For a higher level of testing it is important to understand unresolved problems that originate at unit and integration test levels. You CAN learn system testing, with little or no outside help. Get CAN get free information. Click on a link!

39. What is end-to-end testing?

	Answer: Similar to system testing, the *macro* end of the test scale is testing a complete application in a situation that mimics real world use, such as interacting with a database, using network communication, or interacting with other hardware, application, or system.
40. What is security/penetration testing?

	Answer: Security/penetration testing is testing how well the system is protected against unauthorized internal or external access, or willful damage. This type of testing usually requires sophisticated testing techniques.

41. What is recovery/error testing?

	Answer: Recovery/error testing is testing how well a system recovers from crashes, hardware failures, or other catastrophic problems.

42. What is compatibility testing?

	Answer: Compatibility testing is testing how well software performs in a particular hardware, software, operating system, or network environment.

43. What is comparison testing?

	Answer: Comparison testing is testing that compares software weaknesses and strengths to those of competitors’ products.

44. What is acceptance testing?

	Answer: Acceptance testing is black box testing that gives the client/customer/project manager the opportunity to verify the system functionality and usability prior to the system being released to production. The acceptance test is the responsibility of the client/customer or project manager, however, it is conducted with the full support of the project team. The test team also works with the client/customer/project manager to develop the acceptance criteria.

45. What is software testing methodology?

	Answer: One software testing methodology is the use a three step process of…
	1. Creating a test strategy;
	2. Creating a test plan/design; and
	3. Executing tests. This methodology can be used and molded to your organization’s needs. Rob Davis believes that using this methodology is important in the development and in ongoing maintenance of his customers’ applications.

46. How do you create a test plan/design?

	Answer: Test scenarios and/or cases are prepared by reviewing functional requirements of the release and preparing logical groups of functions that can be further broken into test procedures. Test procedures define test conditions, data to be used for testing and expected results, including database updates, file outputs, report results. Generally speaking…Test cases and scenarios are designed to represent both typical and unusual situations that may occur in the application.Test engineers define unit test requirements and unit test cases. Test engineers also execute unit test cases.
	It is the test team that, with assistance of developers and clients, develops test cases and scenarios for integration and system testing.Test scenarios are executed through the use of test procedures or scripts.Test procedures or scripts define a series of steps necessary to perform one or more test scenarios.Test procedures or scripts include the specific data that will be used for testing the process or transaction.Test procedures or scripts may cover multiple test scenarios.Test scripts are mapped back to the requirements and traceability matrices are used to ensure each test is within scope.Test data is captured and base lined, prior to testing. This data serves as the foundation for unit and system testing and used to exercise system functionality in a controlled environment.Some output data is also base-lined for future comparison. Base-lined data is used to support future application maintenance via regression testing.A pretest meeting is held to assess the readiness of the application and the environment and data to be tested. A test readiness document is created to indicate the status of the entrance criteria of the release.Inputs for this process:Approved Test Strategy Document.Test tools, or automated test tools, if applicable.Previously developed scripts, if applicable.Test documentation problems uncovered as a result of testing.A good understanding of software complexity and module path coverage, derived from general and detailed design documents, e.g. software design document, source code and software complexity data.
	Outputs for this process:Approved documents of test scenarios, test cases, test conditions and test data.Reports of software design issues, given to software developers for correction.

47. How do you execute tests?

	Answer: Execution of tests is completed by following the test documents in a methodical manner. As each test procedure is performed, an entry is recorded in a test execution log to note the execution of the procedure and whether or not the test procedure uncovered any defects. Checkpoint meetings are held throughout the execution phase. Checkpoint meetings are held daily, if required, to address and discuss testing issues, status and activities.The output from the execution of test procedures is known as test results. Test results are evaluated by test engineers to determine whether the expected results have been obtained. All discrepancies/anomalies are logged and discussed with the software team lead, hardware test lead, programmers, software engineers and documented for further investigation and resolution. Every company has a different process for logging and reporting bugs/defects uncovered during testing.A pass/fail criteria is used to determine the severity of a problem, and results are recorded in a test summary report. The severity of a problem, found during system testing, is defined in accordance to the customer’s risk assessment and recorded in their selected tracking tool.Proposed fixes are delivered to the testing environment, based on the severity of the problem. Fixes are regression tested and flawless fixes are migrated to a new baseline. Following completion of the test, members of the test team prepare a summary report. The summary report is reviewed by the Project Manager, Software QA Manager and/or Test Team Lead.After a particular level of testing has been certified, it is the responsibility of the Configuration Manager to coordinate the migration of the release software components to the next test level, as documented in the Configuration Management Plan. The software is only migrated to the production environment after the Project Manager’s formal acceptance.

48. How do you divide the application into different sections to create scripts?

	Answer: First of all, the application is divided in different parts when a business analyst writes the requirement document (or Use Cases or Design Document), he/she writes EACH requirement document for EACH module.  Let us say, if there are 12 different modules in an application that a business analyst has written the requirements for, then a tester would write the test cases for each module, which means in 12 different sections.  This is the standard practice.  There might be scenarios where you might have to break down scripts into sub-categories.  For example, if a tester is writing a script for Login Page, he/she might write one for positive and negative testing and another sub-set of test cases would be for error message when the wrong information is entered.  In short, the test cases are divided according to the modules.(The following questions were asked to Padma in one of her interviews very recently)(This question is asked to check how ambitious you are as far as your career is concerned, whether you like the job you are doing and so on.  Therefore, no matter what, you should stick to your QA job at this point and say that you love this so much and your goal is some thing similar to the one below)

49.  What is RTM (Requirement Traceability Matrix)?

	Answer – Tractability matrix is used to cross check the test cases as per the requirement of the test cases.  In other words, it checks whether the each functionality is covered in the Test Cases as per requirement document.  (We create RTM using Quality Center tool)

50.What is the difference between requirements and specifications?
Ans: 	Requirements document what is needed - they shouldn't specify the how, but the what.

	Specifications document how to achieve the requirements - they should specify the how.

JAVA Question………………………………

01. What is JDK, JRE, JVM?
02. Why main method is public static void?
03. Name of access and non-access modifier?
04. What are the primitive data type?
05. What is Class and Object?
06.what is constructor?how it works?
07:what is getter setters?
08:what is array?how to declare a array?
08:what is loop? how to write nested and enhanced loop?
09:is java can extend multiple class?
10:what is interface?
11;what is difference between interface and abstract?why u used abstract class in your project?
12:what is non primitive datatype?what they are?
13:what is syntax for if else statement?
14:what is four fundamental concept of java?
15:what is polymorphism?
16:what is encapsulation?
17:how to get max number from an array?
18:how to divided a string?
19:how to change a string to int?
20:how to open firefox,chrome and internet explorer in selenium?
21:what is difference between close and quit method in selenium?
22:how to get a text in selenium?
23:how to count how many link in a website ?
24:what is drag and drop?
25:how to handle multiple window?
26:how to handle alert box in selenium?
27:how to handle iframe in selenium?
28:how to catch a value from a select box?
29:how to get data from table?
30:how to concats a string?
31:what is list?
32:what is collection?
33:what is hash map?
34:what is difference between array list and link list?
35:what is difference between override and overloading?
36:what is exception in java?how to handle exception in java?
37what is disadvantage of selenium ide?
38:how to see report in testng framework?
39:Why we need jenkins?
40:what is junit,testing,page object?
41:what is maven?
42:what is difference between final,finally and finalize
43:what is purpose for garbage collection?
44:what is synchronization?
45:why we use thread?
46:difference between hash map and hash table?
47:what is an iterator?
48:difference between method and constructor?
49:what is git?
50:what is difference between verify and assertion?
51:what is assertion in java?
52:what are three common assert in junit or testng?
53:what is selenium grid?
54:Have u ever do parrallel testing or cross browsing testing?
55:How to find second largest number from a database?
56:what is inner ,outer,left,right join in sql?
57:what is primary and foreign key?how many primary key can have in table?
58:what is distint command?
59:what is select command?
60:what is order by and group by in sql?
61:what is cat,touch command in unix?
62:what is rm,vi,cp,grep command in unix?
63:what is head and tail command in unix?
64:how to get last five number in sql?
65:how to connect another computer in unix?
66:what is htmlunitdriver?how it works?
67:what is get and post method?
68:what is web service?
69:what restfull and soup ui in webservice?
70:how many method u can use in restfull service?
71:what is SOA?
72:how to return data from server using which format?
73:what is xml and json?
74:what is difference in and between command in sql ? 
75:what is difference between css selector and path
76:What is desired capability.
77:how to right click mouse using web driver
78:how to scroll down mouse.
79:what is javascriptexecutor.
80:how to take a snapshot.
81:what is jdbc connection.
82:how to handle restapi call using java.
83:why u use prepare statement in jdbc connection.
84:how to handle window authentication box using web driver or auto it tools.
85:how to run testing.xml file from command line.
86: how to do unit testing  or run a method from command line.
87:how to configure a property file .
88:what is log4j.
89:difference between explicit wait and implicitwait.
90:how to handle ajax call.
91.how to handle cookie.



