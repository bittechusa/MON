**LOOP CONTROL:
   Java has very flexible three looping mechanisms. 
   *while Loop
   *do...while Loop
   *for Loop

We usually use for loop most of the time for automation purposes:

**WHILE LOOP:
   A while loop is a control structure that allows you to repeat a task a certain number of times.Here, key point of the while loop is that the loop might not ever run.Its mean that if statement is true then loop will continue. 

Example:
public class Test {

   public static void main(String args[]) {
      int x = 10;

      while( x < 20 ) {
         System.out.print("value of x : " + x );
         x++;
         System.out.print("\n");//FOR NEW LINE
      }
   }
}
This would produce the following result:

value of x : 10,11,12,13,14,15,16,17,18,19

**DO..WHILE LOOP:
   A do...while loop is similar to a while loop, except that a do...while loop is guaranteed to execute at least one time.
   If the Boolean expression is true, the flow of control jumps back up to do, and the statements in the loop execute again. This process repeats until the Boolean expression is false.
Example:
   public class Test {

   public static void main(String args[]){
      int x = 10;

      do{
         System.out.print("value of x : " + x );
         x++;
      }while( x < 20 );
   }
}
This would produce the following result:

value of x : 10,11,12,13,14,15,16,17,18,19

**FOR LOOP:
   A for loop is a repetition control structure that allows you to efficiently write a loop that needs to execute a specific number of times.A for loop is useful when you know how many times a task is to be repeated.The initialization step is executed first, and only once.Then it will go to codition.Once it will meet the condition then next step will be increment.and so on...

Example:
   public class Test {

    public static void main(String args[]) {

      for(int x = 10; x < 20; x = x+1) {
         System.out.print("value of x : " + x );
      }
   }
}
This would produce the following result:

value of x : 10,11,12,13,14,15,16,17,18,19
*Enhanced for loop in Java:
   As of Java 5, the enhanced for loop was introduced. This is mainly used for Arrays.
Example:
   public class Test {

      public static void main(String args[]){
      int [] numbers = {10, 20, 30, 40, 50};

      for(int x : numbers ){
         System.out.print( x );
         System.out.print(",");//FOR PRINT COMMA
      }
      String [] names ={"James", "Larry", "Tom", "Lacy"};
      for( String name : names ) {
         System.out.print( name );
         System.out.print(",");
      }
   }
}
This would produce the following result:
   10,20,30,40,50,
   James,Larry,Tom,Lacy,

**BREAK KEYWORD:
   The break keyword is used to stop the entire loop. The break keyword must be used inside any loop or a switch statement.The break keyword will stop the execution of the innermost loop and start executing the next line of code after the block.

Example:
public class Test {

   public static void main(String args[]) {
      int [] numbers = {10, 20, 30, 40, 50};

      for(int x : numbers ) {
         if( x == 30 ) {
	      break;
         }
         System.out.print( x );
      }
   }
}
This would produce the following result:

10,20
**CONTINUE KEYWORD:
   The continue keyword can be used in any of the loop control structures. It causes the loop to immediately jump to the next iteration of the loop.In a for loop, the continue keyword causes flow of control to immediately jump to the update statement.In a while loop or do/while loop, flow of control immediately jumps to the Boolean expression.

Example:
public class Test {

   public static void main(String args[]) {
      int [] numbers = {10, 20, 30, 40, 50};

      for(int x : numbers ) {
         if( x == 30 ) {
	      continue;
         }
         System.out.print( x );
      }
   }
}
This would produce the following result:

10,20,40,50
